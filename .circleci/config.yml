# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:10.5.0

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: npm run lint
      - run: npm run test

      - run:
          name: Get React Environmental Variables into an '.env' File
          command: |
            if [ "${CIRCLE_BRANCH}" == "test" ]; then
              echo ${REACT_TEST_ENV_FILE} | base64 --decode > .env
            elif [ "${CIRCLE_BRANCH}" == "main" ]; then
              echo ${REACT_PROD_ENV_FILE} | base64 --decode > .env
            fi

      - run: npm run build # this creates the dist folder

      - save_cache:
          key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - dist

  deploy:
    docker:
      - image: circleci/python:2.7-jessie
    working_directory: ~/repo

    steps:
      - restore_cache:
          key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Install awscli
          command: sudo pip install awscli

      - run:
          name: Deploy to S3
          command: |
            if [ "${CIRCLE_BRANCH}" == "test" ]; then
                aws s3 cp --recursive ./dist s3://test.flowspace.bvn.works --metadata-directive REPLACE --cache-control max-age=0,no-cache,no-store,must-revalidate
            elif [ "${CIRCLE_BRANCH}" == "main" ]; then
                aws s3 cp --recursive ./dist s3://flowspace1.bvn.works --metadata-directive REPLACE --cache-control max-age=0,no-cache,no-store,must-revalidate
            fi

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
